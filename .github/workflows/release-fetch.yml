name: fetch release

on:
    workflow_call:
        secrets:
            NPM_PUBLISH:
                required: true

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  registry-url: 'https://registry.npmjs.org'

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Configure git
              run: |
                  git config --global user.name "${{ github.actor }}"
                  git config --global user.email "${{ github.actor }}@users.noreply.github.com"

            - name: Get version bump
              id: bump
              run: |
                  LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
                  if [[ $LAST_COMMIT_MSG == fetch:fix:* ]]; then
                    echo "type=patch" >> $GITHUB_OUTPUT
                  elif [[ $LAST_COMMIT_MSG == fetch:feat:* ]]; then
                    echo "type=minor" >> $GITHUB_OUTPUT
                  elif [[ $LAST_COMMIT_MSG == fetch:chore:* ]]; then
                    echo "type=major" >> $GITHUB_OUTPUT
                  else
                    echo "type=patch" >> $GITHUB_OUTPUT
                  fi

            - name: Install semver
              run: npm install -g semver

            - name: Bump version
              working-directory: packages/fetch
              run: |
                  current_version=$(node -p "require('./package.json').version")
                  if [ "${{ steps.bump.outputs.type }}" = "patch" ]; then
                    new_version=$(semver -i patch $current_version)
                  elif [ "${{ steps.bump.outputs.type }}" = "minor" ]; then
                    new_version=$(semver -i minor $current_version)
                  else
                    new_version=$(semver -i major $current_version)
                  fi
                  # Update package.json
                  sed -i "s/\"version\": \"$current_version\"/\"version\": \"$new_version\"/" package.json
                  # Create commit
                  git add package.json
                  git commit -m "chore(fetch): bump version to ${new_version}"
                  git tag "fetch-v${new_version}"
                  # Push changes and tags
                  git pull
                  git push origin HEAD:main
                  git push origin "fetch-v${new_version}"

            - name: Build
              run: pnpm run build:fetch

            - name: Publish to npm
              working-directory: packages/fetch
              run: pnpm publish --no-git-checks --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
